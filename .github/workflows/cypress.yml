# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Cypress

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: "postgres"
          POSTGRES_DB: appdb
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd "pg_isready -q -d $${POSTGRES_DB} -U $${POSTGRES_USER}"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Cypress run
      uses: cypress-io/github-action@v6
      env:
        TEST: 1
      with:
        start: go run .
        # quote the url to be safe against YML parsing surprises
        wait-on: 'http://localhost:8080/'
        browser: chrome
        headless: true
